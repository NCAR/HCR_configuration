Notes on running scripts for QC processes

#################################################################
# Environment is set in:
#
  ~/git/HCR_configuration/projDir/system/params/project_info.meow
#
# which sets up, for example:
#
  PROJ_DIR = ~/git/HCR_configuration/projDir
  DATA_DIR = /scr/virga1/rsfdata/projects/meow/hcr
  QC_VERSION = qc1 (or whatever)
#
# This file will be edited and changed for each qc run.
 
#################################################################
# run TsStatusMonitor
#
# Create Spdb data base of monitoring data, which includes
# temperatures. These are used for correcting the rx gain.
#
# This step reads the time series and stores the monitoring data
# in spdb.
#
# This data does not change between qc versions - it is the field
# data. So this procedure is only run once per project.
#
# As an example, for meow:

cd ~/git/HCR_configuration/projDir/qcDualPRTground/scripts
./run_TsStatusMonitor.qc.1hz.meow

# and the results are in:

$DATA_DIR/$QC_VERSION/spdb/monitor_1hz

#################################################################
# Translate temperature data into csv text files, from SPDB monitoring
# data.
#
# Run SpdbXml2Table, to produce space-delimited text file
# containing temps.
#
# For example, for meow we would run:

~/git/HCR_configuration/projDir/qcDualPRTground/scripts/run_SpdbXml2Table.mewoTemps

# This creates the file:

$DATA_DIR/$QC_VERSION/txt/MEOW.temperatures.txt   

#################################################################
# LNA and pod temperature analysis
#
# analyze temperatures and powers from noise source cals
#
# As an example:
#   input data is in $DATA_DIR/txt/SOCRATES.temperatures.txt
#
# Run Matlab to read moments, correlate with temps.
# 
# Make an input file with all the cal events and put it in $PROJ_DIR/qcDualPRTground/dataProcessing/nsCal/inFiles
# Use findNScalEvents.m to find the cal events
#
# Run $PROJ_DIR/qcDualPRTground/dataProcessing/nsCal/determine_LNA_tempSlope.m
# and then
# $PROJ_DIR/qcDualPRTground/dataProcessing/nsCal/determine_Pod_tempSlope.m
#
#   Results file is: $PROJ_DIR/qcDualPRTground/dataProcessing/nsCal/inFiles/tempsTable_socrates.txt
#
# NOTE: MEOW summer 2024 no noise source cals, so this step not done

###################################################################
# Run HcrTempRxGain to compute gain change with temp
#
# You need to edit the parameter file and copy in the results from
# the previous step.
#
# Input temp data is from the TsStatusMonitor step:
#   $DATA_DIR/qc1/spdb/monitor_1hz
#
#  Gain coefficients are in:
#       $PROJ_DIR/qcDualPRTground/dataProcessing/nsCal/inFiles/tempsTable_socrates.txt
#
#  These coefficients must be copied into the HcrTempGain.qc param file.
#
#  Output is XML stored in SPDB in:
   $DATA_DIR/$QC_VERSION/spdb/tempVsGain

#################################################################
#################################################################
# Rerun time series
# !!!! This step is only needed when major corrections are required.!!!!!
#################################################################
  
# Iq2Dsr and Dsr2Radx
# time series into 50 hz moments for short and long pulse
#
# Iq2Dsr reads time series and computes moments
# corrects gain for temperatures
# corrects spectral widths
# corrects altitude for deviation from ellipsoid
# corrects velocities for aircraft motion (vertical and horizontal)
#
# writes 50hz moments data to FMQ (file message queue)
#
# Dsr2Radx
#
# Save out 50Hz moments files in CfRadial
#
# NOTE: the scripts start Dsr2Radx first and then Iq2DSr
# The short and long scripts can be run at the same time.

cd ~/git/HCR_configuration/projDir/qcDualPRTground/scripts
run_createMoments.qc.50hz.shortPulse
run_createMoments.qc.50hz.longPulse

# the log files are in:
#
#  /tmp/createMoments.qc.50hz.shortPulse.log 
#  /tmp/createMoments.qc.50hz.longPulse.log 

# When these are done, to clean up run:

kill_createMoments.qc.50hz.shortPulse
kill_createMoments.qc.50hz.longPulse

#################################################################
#################################################################
# Run RadxCalUpdate.qc.50hz
#
# This updates the calibration if necessary, adjusts the calibration gain
# for temperature variations, and fixes the altitudes.
#
# Set up the params file
cd ~/git/HCR_configuration/projDir/qcDualPRTground/params
RadxCalUpdate.qc.50hz.shortPulse.meow
RadxCalUpdate.qc.50hz.longPulse.meow

# Modify and run the run script
cd ~/git/HCR_configuration/projDir/qcDualPRTground/scripts
./run_RadxCalUpdate.qc.50hz.shortPulse.meow
./run_RadxCalUpdate.qc.50hz.longPulse.meow

# Output is the 50hz data in the QC_VERSION directory

#################################################################
# Check tempereature correction
# To check if the temperature correction from the previous step
# worked as expected, run

$PROJ_DIR/qcDualPRTground/dataProcessing/nsCal/check_NSCAL.m

# In the generated figure, there should be no more temperature dependency.
#
# NOTE: MEOW summer 2024 no noise source cals, so this step not done

#################################################################
# HcrShortLongCombine - combine short- and long-pulse 50hz data
# into 10hz dwells
#
# NOTE: the velocity in these moments are only corrected for the
# motion of the aircraft.

cd ~/git/HCR_configuration/projDir/qcDualPRTground/scripts
./run_HcrShortLongCombine.qc.10hz

#################################################################
# Trimm down times
# Make data copy with selected times we want in the final dataset. Run
$PROJ_DIR/qcDualPRTground/scripts/run_RadxConvert.qc.select_times.meow

# This will put the selected timess in
# $DATA_DIR/QC_VERSION/cfradial/selected_times

#################################################################
# Copy to version

# We make another copy of selected_times to
 $DATA_DIR/QC_VERSION/cfradial/v1.0_full
# Where the model data, flag field, etc. will be added
# selected_times is a backup which can be copied to v1.0
# again if something goes wrong during the addition of the
# additional fields.

#################################################################
# FLAG field and DBZ_masked
# To create the flag field, run
$PROJ_DIR/qcDualPRTground/dataProcessing/HCRproducts/flag/makeFlagField_wholeFlights.m

# To add it to the cfradial files, run
$PROJ_DIR/qcDualPRTground/dataProcessing/HCRproducts/flag/cfradialFlagfield.m

# To add a DBZ field that has only cloud data, run
$PROJ_DIR/qcDualPRTground/dataProcessing/HCRproducts/flag/cfradialDBZmasked.m

#################################################################
# VEL_CORR

# Find out which poly order to use by running
$PROJ_DIR/qcDualPRTground/dataProcessing/HCRproducts/velCorr/plotVelCorr_findPoly.m

# To make the VEL_CORR field
# If nadir and zenith pointing correction is desired run
$PROJ_DIR/qcDualPRTground/dataProcessing/HCRproducts/velCorr/make_VEL_CORR_nadir_zenith_wholeFlights.m
# If only nadir correction is desired run (not recommended!!!)
$PROJ_DIR/qcDualPRTground/dataProcessing/HCRproducts/velCorr/notUsed2/make_VEL_CORR_nadir_wholeFlights.m

# The filter lenght can be adjusted in this file. To test out 
# different filter lenghts, run
$PROJ_DIR/qcDualPRTground/dataProcessing/HCRproducts/velCorr/plotVelCorr_findPoly.m
# on a few test cases.

# To add it to the cfradial files, run
$PROJ_DIR/qcDualPRTground/dataProcessing/HCRproducts/velCorr/cfradialVelCorr.m

#################################################################
# De-alias velocity

# To de-alias velocity and mask out and non-cloud
# data run

$PROJ_DIR/qcDualPRTground/dataProcessing/HCRproducts/rayDeAliasing/call_rayDeAlias_wholeFlights_withPlot.m

# To add it to the dataset run
$PROJ_DIR/qcDualPRTground/dataProcessing/HCRproducts/rayDeAliasing/cfradialVELunfolded.m

#################################################################
# Mask out non vertical angles in VEL

# Velocity is not of much use when the pointing angle is not vertical.
# To mask out non-vertical data run

$PROJ_DIR/qcDualPRTground/dataProcessing/HCRproducts/flag/cfradialVELmasked.m

#################################################################
# Interpolate forecast or reanalysis data
#
# We need model input data from eather ecmwf forecasts or
# era5 reanalysis

# The variables needed are:
# 3D: Relative humidity, U velocity, V velocity, Temperature, Geopotential, 1000 to 100 hPa
# 2D: Sea surface temperature, 2 metre dewpoint temperature, 2 metre temperature,
#     10 metre U wind component, 10 metre V wind component, Surface pressure

# cd $DATA_DIR
# cd ../model/era5

# To get era5 data run $PROJ_DIR/qcDualPRTground/scripts/downloadERA5.pressLev.cset
# (There is also a script for surface variables but that needs more testing (downloadERA5.surf.cset)

# Modify and run $PROJ_DIR/qcDualPRTground/dataProcessing/HCRproducts/modelData/model2HCR4d.m

# It needs an input file with the start and end dates of each flight
# $PROJ_DIR/qcDualPRTground/dataProcessing/scriptsFiles/flights_socrates_data.txt

# Add model data to cfradial files

# Run
$PROJ_DIR/qcDualPRTground/dataProcessing/HCRproducts/modelData/cfradialModel.m

#################################################################
# Correct corrupted LDR
# In SPICULE we had a problem with the H channel which corrupted
# LDR. To correct this problem, run
$PROJ_DIR/qcDualPRTground/dataProcessing/other/filterHX/filterHX.m

# To created corrected and masked LDR field, run
$PROJ_DIR/qcDualPRTground/dataProcessing/other/filterHX/cfradialLDRmasked.m

#################################################################
# Add melting layer

# Adjust and run
$PROJ_DIR/qcDualPRTground/dataProcessing/HCRproducts/meltingLayer/call_meltLayer_advanced_wholeFlights.m

# To add it to the dataset run
$PROJ_DIR/qcDualPRTground/dataProcessing/HCRproducts/meltingLayer/cfradialMeltLayer.m

#################################################################
# Add convStrat

# Adjust and run
$PROJ_DIR/qcDualPRTground/dataProcessing/HCRproducts/stratConv/stratConv_2convectivity_wholeFlights.m

# To add id to the dataset run
$PROJ_DIR/qcDualPRTground/dataProcessing/HCRproducts/stratConv/cfradial_convStrat.m

#################################################################
# Add PID

# Adjust and run
$PROJ_DIR/qcDualPRTground/dataProcessing/HCRproducts/PID/HCRonly/call_pid_wholeFlights.m

# To add id to the dataset run
$PROJ_DIR/qcDualPRTground/dataProcessing/HCRproducts/HCRonly/cfradial_pid.m

#################################################################
# Create final subset

# Once all fields have been added we create a dataset version that
# has only fields that are useful to the users. Run

$PROJ_DIR/qcDualPRTground/scripts/run_RadxConvert.qc.select_fields.spicule

# This will put the selected timess in
# $DATA_DIR/QC_VERSION/cfradial/QC_SUB_VERSION

################################################################
# Create and check images. Replace imges on field catalog.

# Run
$PROJ_DIR/catalog/scripts/run_HawkEye.catalog.15min_archive.cset

# Check images by running gwenview. (It runs best if run on current
# desktop, not on servers rain, snow, etc.)

# If the 15 minute images look good, run
$PROJ_DIR/catalog/scripts/run_HawkEye.catalog.5min_archive.cset
$PROJ_DIR/catalog/scripts/run_HawkEye.catalog.1hour_archive.cset

# Work with Carol Costanza to replace the images on the field catalog.

################################################################
# Sea Surface Cal

# To check the sea surface calfor ssCal events, run
$PROJ_DIR/qcDualPRTground/dataProcessing/determine_bias.m

# With the start and end dates of
$PROJ_DIR/qcDualPRTground/dataProcessing/biasInFiles/cal_socrates_era5file.txt

# To run nadir pointing ssCal for whole flights:
$PROJ_DIR/qcDualPRTground/dataProcessing/determine_bias_nadir.m

#################################################################
#################################################################

# 2Hz and merge with HSRL

#################################################################
#################################################################
# Create 2hz HCR data

# Run RadxDwellCombine on 10hz data
$PROJ_DIR/qcDualPRTground/scripts/run_RadxDwellCombine.qc.2hz.socrates
# which runs with the params file
$PROJ_DIR/qcDualPRTground/params/RadxDwellCombine.qc.2hz

#################################################################
# Copy HSRL moments data into HCR QC data area - 2Hz data
#
# The HSRL moments are computed using pythons scripts in the
# HSRL project:
#   https://github.com/ncar/hsrl_configuration
# Check that repo for docs on the specifics of that processing.
#
# The moments computed above are referred to as the python_moments.
#
# When that processing is complete, the files are copied in to
# the HCR_configuration project area, for inclusion in the HCR
# QC processing.
#
# For example, for socrates, we ran the following:
#
source ~/hcrProjDir/system/params/project_info.socrates
mkdir -p $DATA_DIR/$QC_VERSION/hsrl/python_moments
cd /scr/snow2/rsfdata/projects/socrates/hsrl/qcDualPRTground/mhayman_moments
rsync -av * $DATA_DIR/$QC_VERSION/hsrl/python_moments

#################################################################
# Convert python moments to CfRadial - 2Hz data
#
# Run Hsrl2Radx to convert python-generated moments to CfRadial.
#
# This will write data to:
#  $DATA_DIR/$QC_VERSION/cfradial/hsrl_moments/2hz
#
# For example, for socrates:
#
cd ~/hcrProjDir/qcDualPRTground/scripts/
run_Hsrl2Radx.qc.2hz.cset
# or
run_Hsrl2Radx.qc.2hz.socrates
#################################################################
# Merge 2Hz HCR final moments with 2Hz HSRL moments
#
# Run MergeHcrAndHsrl to merge HCR and HSRL 2 Hz moments
#
# We preserve the model-based fields from HCR.
# And only use the HSRL moments from the HSRL files, ignoring
# HSRL model-based fields.
#
# This will write data to:
#  $DATA_DIR/$QC_VERSION/cfradial/hcr_hsrl_merge/v3.0_full/2hz
#
# For example, for socrates:
#
cd ~/hcrProjDir/qcDualPRTground/scripts/
run_MergeHcrAndHsrl.qc.2hz.cset
# or
run_MergeHcrAndHsrl.qc.2hz.socrates

#################################################################
# Add PID

# Adjust and run
$PROJ_DIR/qcDualPRTground/dataProcessing/HCRproducts/PID/HSRL_HCR/call_pid_comb_wholeFlights.m

# To add it to the dataset run
$PROJ_DIR/qcDualPRTground/dataProcessing/HCRproducts/HSRL_HCR/cfradial_pid_comb.m

#################################################################
# Create final subset

# Once all fields have been added we create a dataset version that
# has only fields that are useful to the users. Run

$PROJ_DIR/qcDualPRTground/scripts/run_RadxConvert.qc.select_fields.HcrHsrl2hz.cset

################################################################
# Create and check images. Replace imges on field catalog.

# Run
$PROJ_DIR/catalog/scripts/run_HawkEye.catalog.15min_archive_HcrHsrl2hz.cset

# Check images by running gwenview. (It runs best if run on current
# desktop, not on servers rain, snow, etc.)

# If the 15 minute images look good, run
$PROJ_DIR/catalog/scripts/run_HawkEye.catalog.5min_archive_HcrHsrl2hz.cset
$PROJ_DIR/catalog/scripts/run_HawkEye.catalog.1hour_archive_HcrHsrl2hz.cset

# Work with Carol Costanza to replace the images on the field catalog.

################################################################
