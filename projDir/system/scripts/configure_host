#! /bin/bash

#--------------------------------------------------------------------
#
# script to configure a host for the HCR data system
#
# Mike Dixon, EOL, NCAR, Boulder, CO, USA
# Dec 2010
#
#--------------------------------------------------------------------
#
# Makes links to the proc_list, data_list and crontab files
#
#--------------------------------------------------------------------

# set the path

export PATH=.:/bin:/usr/bin:/sbin:/usr/sbin:/usr/bin/X11:/usr/local/bin:/usr/local/sbin

DATA_DIR="/data/hcr"
GIT_REPO_DIR="/home/hcr/git/HCR_configuration"
debug=false

#--------------------------------------------------------------------
# usage function
#

function usage() {
    echo
    echo "Usage: configure_host [ -d -h -v ] -r root_dir -D data_dir"
    echo
    echo "  -h:  produce this usage list"
    echo "  -d:  turn debugging on"
    echo "  -v:  version"
    echo "  -r:  specify repository directory"
    echo "       This dir, in git, contains projDir"
    echo "       default is: $GIT_REPO_DIR"
    echo "  -D:  specify data dir"
    echo "       this is the top dir for the data"
    echo "       default is: $DATA_DIR"
    echo
}

#--------------------------------------------------------------------
# check args

# Parse command line options.
while getopts hvdr:D: OPT; do
    case "$OPT" in
        h)
            usage
            exit 0
            ;;
        d)
            debug=true
            ;;
        v)
            echo "`basename $0` version 1.1"
            exit 0
            ;;
        r)
            GIT_REPO_DIR=$OPTARG
            ;;
        D)
            DATA_DIR=$OPTARG
            ;;
        \?)
            # getopts issues an error message
            echo "Problems with command line usage"
            usage
            exit 1
            ;;
    esac
done

# Remove the switches we parsed above.
shift `expr $OPTIND - 1`

if [ "$debug" == "true" ]
then
    echo "GIT_REPO_DIR is $GIT_REPO_DIR"
    echo "DATA_DIR is $DATA_DIR"
    echo "debug is true"
fi

# set directory paths

git_repo_dir=$GIT_REPO_DIR/projects/hcr
git_proj_dir=$git_repo_dir/projDir
system_dir=$git_proj_dir/system

echo "git_repo_dir: $git_repo_dir"
echo "git_proj_dir: $git_proj_dir"
echo "system_dir: $system_dir"

#-- get current host type if possible -------------------------------
#
# This is stored in the file ~/.host_type

installed_host_type=archiver
if [ -e $HOME/.host_type ]
then
  installed_host_type=`cat $HOME/.host_type`
  echo "  Found installed host type: '$installed_host_type'"
  echo
fi

#-- get host type ---------------------------------------------------

while [ "$host_type" != archiver -a \
        "$host_type" != drx ]

do

echo "Choose host type from the following list"
echo " or hit enter to use existing host type as shown:"
echo
echo "    archiver"
echo "    drx"
read -ep "    ......($installed_host_type)? " host_type
test "$host_type" || host_type=$installed_host_type
echo

if [ "$host_type" != archiver -a \
     "$host_type" != drx ]

then

    echo -n X | tr X '\07'	# Beep.
    echo
    echo "  ERROR - invalid host type ..."
    echo "          try again ..."

fi

done

# save the host type

echo $host_type > $HOME/.host_type

echo
echo "*********************************************************************"
echo
echo "  configure_host for HCR"
echo
echo "  `date`"
echo
echo "  host type: $host_type"
echo
echo "*********************************************************************"
echo

# create directory for backup links

backup_links_dir=$HOME/.backup_links
/bin/rm -rf $backup_links_dir
mkdir -p $backup_links_dir

# make links to dotfiles in cvs

cd $HOME
for dotfile in cshrc bashrc emacs cvsignore Xdefaults
do
    echo "/bin/mv -f .$dotfile $backup_links_dir"
    /bin/mv -f .$dotfile $backup_links_dir
    ln -s $system_dir/dotfiles/$dotfile .$dotfile
done

# make link to projDir

cd $HOME
/bin/mv -f projDir $backup_links_dir
ln -s $git_proj_dir

############################################
# data dir - specific to the host type
# copy data dir into /data/hcr,
#   which must be writable by hcr
# make link to data dir

cvs_data_dir=$git_repo_dir/data_dirs/data.${host_type}
inst_data_dir=$DATA_DIR/data.${host_type}

cd $HOME/projDir
/bin/cp -r $cvs_data_dir $DATA_DIR
/bin/mv -f data $backup_links_dir
ln -s $inst_data_dir data

# log dir

/bin/mv -f logs $backup_links_dir
ln -s data/logs

#####################
# set up control dir

cd $HOME/projDir/control

# make backups as required

/bin/mv -f crontab $backup_links_dir
/bin/mv -f proc_list $backup_links_dir
/bin/mv -f data_list $backup_links_dir

# set links based on host type

ln -s proc_list.$host_type proc_list
ln -s data_list.$host_type data_list
ln -s crontab.$host_type crontab
