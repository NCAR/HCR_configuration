import rdams_client as rc
import time

# Function to keep checking if a request is ready. (Used below.)
def check_ready(rqst_id, wait_interval=300): # Check every 300s=5min
    for i in range(288): # 288 is arbitrary. Total wait time for request is 24 hours (300s*288)
        res = rc.get_status(rqst_id)
        request_status = res['result']['status']
        if request_status == 'Completed':
            return True
        print(request_status)
        print('Not yet available. Waiting ' + str(wait_interval) + ' seconds.' )
        time.sleep(wait_interval)
    return False

# Control dict for subsetting. Describes which data is being downloaded.
control = { 
    'dataset' : 'ds633.0', # Dataset ID from the RDA website
    'date':'201506300000/to/201508122359', # Start and end date
    'datetype':'init',
    # Variables. Dewpoint (VAR_2D), Temperature (VAR_2T), U (VAR_10U), V (VAR_10V), Pressure (SP), Sea surface temp (SSTK)
    'param':'VAR_2D/VAR_2T/VAR_10V/VAR_10U/SP/SSTK',
    'oformat':'netCDF', # Output format
    'nlat':50, # North latitude
    'slat':15, # South latitude
    'elon':-115, # East longitude
    'wlon':-160, # West longitude
    'product':'Analysis',
    'group_index':29 # 29 is the index for the surface reanalysis.
}

# Submit a request and check if it went through without an error.
response = rc.submit_json(control)
assert response['status'] == 'ok'
rqst_id = response['result']['request_id']

print(response)

# Checks if a requst is ready. When it is, it will start to download the files. (Uses function from the top.)
check_ready(rqst_id)
rc.download(rqst_id)

# Purge request
rc.purge_request(rqst_id)
